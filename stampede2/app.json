{
    "name": "saffrontree",
    "version": "0.0.1",
    "shortDescription": "Fast, reference-free pseudo-phylogenomic trees from reads or contigs",
    "longDescription": "Quickly build a tree directly from raw reads or from assembled sequences, without the need for a reference sequence or de novo assemblies. SaffronTree takes FASTQ/FASTA files as input and uses a kmer analysis to build a phylogenetic neighbour joining tree in newick format. It works well for small sets of samples (less than 50) but as the algorithm has a complexity of O(N^2), it does not perform well after that point. This is good enough to give you rapid insights into your data in minutes, rather than hours. During outbreak investigations, researchers and epidemiologies often want to quickly rule a sample in or out of an outbreak. MLST does not provide enough granularity to achieve this, since it is based on only 7 house keeping genes. SaffronTree utilises all of the genomic data in the sample to create a visual representation of the clustering of the data. It support NGS data (such as Illumina), 3rd generation data (Pacbio/Nanopore) and assembled sequences (FASTA).",
    "available": true,
    "checkpointable": false,
    "defaultMemoryPerNode": 32,
    "defaultProcessorsPerNode": 16,
    "defaultMaxRunTime": "12:00:00",
    "defaultNodeCount": 1,
    "defaultQueue": "normal",
    "deploymentPath": "kyclark/applications/saffrontree-0.0.1/stampede2",
    "deploymentSystem": "data.iplantcollaborative.org",
    "executionSystem": "tacc-stampede2-kyclark",
    "executionType": "HPC",
    "helpURI": "http://joss.theoj.org/papers/10.21105/joss.00243",
    "label": "SaffronTree",
    "parallelism": "SERIAL",
    "templatePath": "template.sh",
    "testPath": "test.sh",
    "modules": [
        "tacc-singularity"
    ],
    "tags": [
        "pairwise",
        "comparison",
        "imicrobe"
    ],
    "ontology": [
        "http://sswapmeet.sswap.info/agave/apps/Application"
    ],
    "inputs": [
        {
            "id": "QUERY",
            "value": {
                "default": "",
                "order": 0,
                "validator": "",
                "required": false,
                "visible": true,
                "enquote": false
            },
            "semantics": {
                "ontology": [
                    "http://sswapmeet.sswap.info/mime/application/X-bam"
                ],
                "minCardinality": 1,
                "maxCardinality": -1,
                "fileTypes": [
                    "raw-0"
                ]
            },
            "details": {
                "description": "",
                "label": "Directory of FAST(A|Q)(.gz) files to compare",
                "argument": "-q ",
                "repeatArgument": true,
                "showArgument": true
            }
        }
    ],
    "parameters": [
        {
            "id": "KMER_SIZE",
            "value": {
                "default": "31",
                "type": "number",
                "order": 1,
                "validator": "",
                "required": true,
                "visible": true,
                "enquote": false
            },
            "details": {
                "description": "It should be an odd number, and a suitable range is between 25-61.",
                "label": "Kmer size",
                "argument": "--kmer",
                "repeatArgument": false,
                "showArgument": true
            }
        },
        {
            "id": "MIN_KMERS_THRESHOLD",
            "value": {
                "default": "",
                "type": "number",
                "order": 2,
                "validator": "",
                "required": false,
                "visible": true,
                "enquote": false
            },
            "details": {
                "description": "This value lets you set a minimum threshold for the occurance of a kmer with raw reads. You need about 6x depth to detect a variant with reasonable confidence. Setting this too low will allow random noise (from sequencing errors) through and give you lots of false positives. The maximum suggested value is half the estimated depth of coverage for paired ended data (since forward and reverse reads are evaluated independently). If an input file is in FASTA format, this value is set to 1 for that file, as it assumed it is assembled contigs rather than reads.",
                "label": "Min. Kmers Threshold",
                "argument": "--min_kmers_threshold",
                "repeatArgument": false,
                "showArgument": true
            }
        },
        {
            "id": "MAX_KMERS_THRESHOLD",
            "value": {
                "default": "",
                "type": "number",
                "order": 3,
                "validator": "",
                "required": false,
                "visible": true,
                "enquote": false
            },
            "details": {
                "description": "This value lets you set a maximum threshold for the occurance of a kmer. With KMC, there is a catchall bin for occurances of 255 and greater (so 255 is the maximum value). By default it is set to 254 which excludes this catchall bin for kmers, and thus the long tail of very common kmers. This reduces the false positives. You need to be careful when setting this too low since you could be excluding interesting kmers.",
                "label": "Max. Kmers Threshold",
                "argument": "",
                "repeatArgument": false,
                "showArgument": true
            }
        },
        {
            "id": "VERBOSE",
            "value": {
                "default": false,
                "type": "flag",
                "order": 4,
                "validator": "",
                "required": false,
                "visible": true,
                "enquote": false
            },
            "details": {
                "description": "By default the output is silent and all intermediate files are deleted as it goes along. Setting this flag allows you output more details of the software as it runs and it keeps the intermediate files.",
                "label": "Verbose",
                "argument": "--verbose",
                "repeatArgument": false,
                "showArgument": true
            }
        }
    ],
    "outputs": []
}
